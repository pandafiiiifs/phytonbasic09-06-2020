 #Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
 # который должен принимать данные (список списков) для формирования матрицы.
#Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
#Примеры матриц вы найдете в методичке.
#Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
#Далее реализовать перегрузку метода __add__()
 # для реализации операции сложения двух объектов класса Matrix (двух матриц).
 # Результатом сложения должна быть новая матрица.
#Подсказка: сложение элементов матриц выполнять поэлементно —
 # первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
import numpy as np


class Matrix:
    def __init__(self, matr_1, matr_2):
        self.matr_1= matr_1
        self.matr_2 = matr_2

    def __add__(self):
        matr = [[0, 0, 0],
                [0, 0, 0],
                [0, 0, 0]]

        for i in range(len(self.matr_1)):

            for j in range(len(self.matr_2[i])):
                matr[i][j] = self.matr_1[i][j] + self.matr_2[i][j]

        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matr]))


    def __str__(self):
        matr = (self.matr_1,self.matr_2)
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matr]))





my_matrix = Matrix([[0, 1, 20],
                    [8, 7, 2],
                    [52, 42, 1]],
                   [[85, 5, 1],
                    [25, 77, 99],
                    [54, 22, 85]])


print(my_matrix)
#print(my_matrix.__add__())

